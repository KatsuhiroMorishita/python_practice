#!/usr/bin/env python
# coding: utf-8

# # 関数の問題
# **関数と組み込み関数**  
# 　関数とは、複数行に渡る命令を1つの塊としていつでも呼び出せるようにする機能である。例えば、
# 
# ```python
# print("hello")
# ```
# 
# を実行すれば、helloと表示される。これはprintという名前で、カッコ内に渡されたものを表示する機能が関数として登録されていたためである。このように、言語環境に最初から備わっている関数のことを組み込み関数という。また、関数は必要に応じて自分で作ることもできる。
# 
# 
# **関数の作り方**  
# 　Pythonの関数は、以下の書式で作る。function_nameは関数名、argは関数に渡す引数を表している。関数の範囲は字下げされた部分である。字下げが終われば、関数の範囲もそこで終わる。
# 
# ```python
# 
# def function_name(arg):
#     value = 100  # 何か処理　　　ここは関数内
#     return value              # ここは関数内
# 
# a = 200  # 全然関係ない処理　　この行は字下げがないので、関数外
# ```
# 
# 　例えば、以下の書き方でBMI（肥満度判定指標の一つ）を求めることができる。関数は関数名に続けて丸かっこ()により呼び出すことができ、その際に引数に代入する値を順に渡す。
# ```python
# def BMI(height_m, weight_kg):    # 引数は身長[m]と体重[kg]
#     bmi_value =  weight_kg / (height_m**2)
#     return bmi_value
# 
# print(BMI(1.70, 62))  # 関数の呼び出し（実行）
# ```
# 
# **関数の仮引数**  
# 仮引数とは、引数を指定しなかった場合に代入される標準的な値を指定する方法である。
# 

# In[1]:


# 仮引数の説明
# rateには0.1が標準で入る
# rateが引数で渡されないと0.1となる

def get_value(x, rate=0.1):
    return x * (1 + rate)

print(get_value(1000))        # rateを指定していない
print(get_value(1000, 0.5))   # rateを指定した。


# In[2]:


# 仮引数は便利だが、引数の順番としては、仮引数としない引数よりも右側にある必要がある。
# したがって、以下の例ではエラーとなる。
# エラーメッセージの「non-default argument follows default argument」を意訳すれば、
# 「仮引数の右側に仮引数ではない引数がある」となる。

def get_value(x=100, rate):
    return x * (1 + rate)

print(get_value(1000))


# ---
# ### 問題　税率を計算する関数
# 次のセルに示すひな形を基に、税率を計算する関数を作成せよ。
# ただし、条件を以下のように定める。
# - xに税抜き値段, rateに税率を入れる
# - 税込みの金額を返す
# 
# 解答例とその画面出力は以下の通り（隠れている場合はクリックして開く）

# In[15]:


# ひな形
def get_value(x, rate):
    y = 100
    return y

# 次の命令を実行し、1200と表示されればよい
print(get_value(1000, 0.2))


# In[16]:


# 税率の計算　計算例1

def get_value(x, rate):
    print("x", x)        # 引数の中身をこれで確認
    print("rate", rate)
    
    y = x * (1 + rate)   # 税込み金額をyに代入
    return y

print(get_value(1000, 0.2))   # 関数を呼び出した結果をprint()で表示


# In[18]:


# 税率の計算　計算例2
# 関数内でyという変数を使わずに、いきなりreturnで戻した。
# 読みやすい、わかりやすい方を使えばよい。

def get_value(x, rate):
    print("x", x)        # 引数の中身をこれで確認
    print("rate", rate)
    
    return x * (1 + rate)   # 税込み金額を計算して、returnで戻す

result = get_value(1000, 0.2)  # 関数を呼び出して返ってきた値を変数に格納
print(result)


# ---
# ### 問題　気体のモル数nを求める関数
# 　気体は$ pV = nRT $に概ね従うことが知られている。ここで、$ p $ は気圧\[Pa\]、$ V $は体積\[ $ m^3 $ \]、$ n $は気体の分子数\[mol\]、$ R $は気体定数、$ T $は気体の温度\[K\]を表している。
#  
# 次のセルに、気体のモル数nを求める関数のひな型を示している。これを改造して、気体のモル数を求めて返す関数を作成せよ。ただし、気体定数と温度は仮引数でそれぞれ8.314と300を指定すること。

# In[11]:


# 気体のモル数を求める　計算例1
def get_n(p, V, R, T):
    n = 100
    return n

# 以下の命令を実行して、約1.0と表示されればよい
get_n(1013.25 * 100, 22.4 / 1000, 8.314, 273.15)


# In[12]:


# 気体のモル数を求める　計算例1
def get_n(p, V, R=8.314, T=300):
    n = (p * V) / (R * T)
    return n

get_n(1013.25 * 100, 22.4 / 1000, 8.314, 273.15)


# In[13]:


# 一部の仮引数だけ、具体的な値を指定する例
get_n(1013.25 * 100, 22.4 / 1000, T=400)

